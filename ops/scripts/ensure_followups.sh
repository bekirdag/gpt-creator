#!/usr/bin/env bash
set -euo pipefail

# Synthesize minimal review artefacts when the agent omitted them so
# auto-retry/auto-apply can proceed without blocking on "review (missing)".

ROOT="${1:-$(git rev-parse --show-toplevel)}"
RUNS_DIR="$ROOT/.gpt-creator/staging/plan/work/runs"

if [[ ! -d "$RUNS_DIR" ]]; then
  echo "[ensure_followups] runs directory missing; nothing to do"
  exit 0
fi

LAST_RUN="$(ls -1dt "$RUNS_DIR"/* 2>/dev/null | head -n1 || true)"
if [[ -z "${LAST_RUN:-}" || ! -d "$LAST_RUN" ]]; then
  echo "[ensure_followups] no runs found"
  exit 0
fi

REVIEW_DIR="$LAST_RUN/review"
mkdir -p "$REVIEW_DIR"

if [[ -s "$REVIEW_DIR/review.md" ]]; then
  echo "[ensure_followups] review already exists; skipping"
  exit 0
fi

LOG="$ROOT/.gpt-creator/logs/last-run.log"
if [[ ! -f "$LOG" ]]; then
  LOG="$LAST_RUN/console.log"
fi

task_id="unknown"
status="unknown"
tokens="unknown"

if [[ -f "$LOG" ]]; then
  task_id="$(grep -m1 -E '\|\s+START TASK ID\s+\|' -A2 "$LOG" | tail -n1 | tr -d ' |' || echo "unknown")"
  status="$(grep -m1 -E 'STATUS:' "$LOG" | sed -E 's/.*STATUS:\s+//' || echo "unknown")"
  tokens="$(grep -m1 -E 'TOKENS USED:' "$LOG" | sed -E 's/.*TOKENS USED:\s+//' || echo "unknown")"
fi

run_id="$(basename "$LAST_RUN")"
timestamp="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

cat >"$REVIEW_DIR/review.md" <<EOF
# Review â€” ${task_id:-unknown}

Auto-generated to unblock auto-retry/auto-apply because the upstream agent did not produce a review artefact.

- Status: ${status:-unknown}
- Tokens used: ${tokens:-unknown}
- Run: $run_id
- Generated: $timestamp

See \`${LOG#$ROOT/}\` for full console output.
EOF

cat >"$REVIEW_DIR/summary.json" <<EOF
{
  "taskId": "${task_id:-null}",
  "status": "${status:-unknown}",
  "tokensUsed": "${tokens:-unknown}",
  "runId": "$run_id",
  "generatedAt": "$timestamp",
  "autoGenerated": true
}
EOF

echo "[ensure_followups] created stub review at $REVIEW_DIR"
