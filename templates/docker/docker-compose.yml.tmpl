# docker-compose.yml template for gpt-creator stack (API, web, admin, db, proxy)
version: "3.9"
services:
  db:
    image: mysql:8.0
    container_name: yoga_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: yoga_app
      MYSQL_USER: yoga
      MYSQL_PASSWORD: yoga
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - db_data:/var/lib/mysql

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: yoga_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_URL: mysql://yoga:yoga@db:3306/yoga_app
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ../apps/api:/workspace/apps/api
      - ../package.json:/workspace/package.json

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.web
    container_name: yoga_web
    environment:
      NODE_ENV: development
      VITE_API_BASE: http://localhost:3000/api/v1
    ports:
      - "5173:5173"
    volumes:
      - ../apps/web:/workspace/apps/web

  admin:
    build:
      context: ..
      dockerfile: docker/Dockerfile.admin
    container_name: yoga_admin
    environment:
      NODE_ENV: development
      VITE_API_BASE: http://localhost:3000/api/v1
    ports:
      - "5174:5173"
    volumes:
      - ../apps/admin:/workspace/apps/admin

  proxy:
    image: nginx:alpine
    container_name: yoga_proxy
    depends_on:
      - web
      - admin
      - api
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  db_data: {}
